{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport { fetchData } from \"../utils/fetchData\";\nimport { preRenderJson } from \"../utils/fetchDataDB\";\n\nconst PersonDetailPage = props => {\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: /*#__PURE__*/_jsxs(\"h1\", {\n      children: [\" \", props.product.username]\n    })\n  });\n};\n\nexport async function getStaticProps(context) {\n  try {\n    const {\n      params\n    } = context;\n    const id = params.pid;\n    const data = await fetchData();\n    const result = data.data.filter((item, index) => {\n      return item._id === id;\n    });\n    return {\n      props: {\n        product: result\n      },\n      revalidate: 10,\n      notFound: false\n    };\n  } catch {\n    const {\n      params\n    } = context;\n    const id = params.pid;\n    const data = await preRenderJson();\n    const dataFinal = await JSON.parse(data);\n    const result = dataFinal.filter((item, index) => {\n      return String(item._id) === String(id);\n    });\n    return {\n      props: {\n        product: result\n      },\n      revalidate: 10,\n      notFound: false\n    };\n  }\n}\nexport async function getStaticPaths() {\n  try {\n    const data = await fetchData();\n    const dynamicPaths = data.data.map((item, index) => {\n      return {\n        params: {\n          pid: item._id\n        }\n      };\n    });\n    return {\n      paths: dynamicPaths,\n      fallback: false\n    };\n  } catch {\n    const data = await preRenderJson();\n    const dataFinal = await JSON.parse(data);\n    const dynamicPaths = dataFinal.map((item, index) => {\n      return {\n        params: {\n          pid: String(item._id)\n        }\n      };\n    });\n    return {\n      paths: dynamicPaths,\n      fallback: false\n    };\n  }\n}\nexport default PersonDetailPage;","map":null,"metadata":{},"sourceType":"module"}